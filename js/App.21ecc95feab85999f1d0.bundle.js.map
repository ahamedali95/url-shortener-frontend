{"version":3,"file":"js/App.21ecc95feab85999f1d0.bundle.js","mappings":"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","sources":["webpack://url-shortener-frontend/./src/components/UrlEntry.tsx","webpack://url-shortener-frontend/./src/components/DetailsSection.tsx","webpack://url-shortener-frontend/./src/api/enpoints.ts","webpack://url-shortener-frontend/./src/api/index.ts","webpack://url-shortener-frontend/./src/hooks/useResource.ts","webpack://url-shortener-frontend/./src/components/App.tsx"],"sourcesContent":["import React, { ChangeEvent, useMemo } from 'react';\nimport { Typography, Box, TextField, Grid, Button, Paper, FormHelperText } from '@material-ui/core';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\ntype UrlEntryProps = {\n    detailsLoading: boolean;\n    handleChange: (value: string) => unknown;\n    handleClick: () => unknown;\n    value: string;\n};\n\nconst useUrlEntryStyles = makeStyles(() => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n        margin: '25px',\n        width: '60%',\n        height: '90%'\n    },\n    subtitle: {\n        fontWeight: 300\n    },\n    entry: {\n        border: '3px solid #bbb',\n        width: '100%'\n    },\n    entryInvalid: {\n        border: '3px solid #FF0000',\n        width: '100%'\n    },\n    submission: {\n        width: '100%',\n        height: '100%'\n    },\n    helperText: {\n        color: '#FF0000'\n    }\n}));\n\nconst UrlEntry: React.FC<UrlEntryProps> = ({ detailsLoading, value, handleChange, handleClick }) => {\n    const classes = useUrlEntryStyles();\n\n    const isUrlValid = useMemo((): boolean => {\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n    }, [value]);\n\n    return (\n        <Paper\n            className={classes.root}\n            elevation={2}\n        >\n            <Typography\n                className={classes.subtitle}\n                variant='h4'\n            >\n                Paste the url to be shortened\n            </Typography>\n            <Grid\n                container\n                item\n                spacing={1}\n            >\n                <Grid\n                    item\n                    xs={9}\n                >\n                    <TextField\n                        className={value ? isUrlValid ? classes.entry : classes.entryInvalid : classes.entry}\n                        focused\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => handleChange(e.target.value)}\n                        value={value}\n                        InputProps={{ disableUnderline: true }}\n                    />\n                </Grid>\n                <Grid\n                    item\n                    xs={3}\n                >\n                    <Button\n                        className={classes.submission}\n                        color=\"primary\"\n                        disabled={detailsLoading || !value || !isUrlValid}\n                        onClick={handleClick}\n                        variant=\"contained\"\n                    >\n                        Shorten URL\n                    </Button>\n                </Grid>\n            </Grid>\n            { value && !isUrlValid && <FormHelperText className={classes.helperText}>Invalid entry</FormHelperText> }\n            <Box mt={2} />\n            <Typography\n                variant='subtitle1'\n            >\n                Use this URL Shortener tool to shorten your URL so it is easy to remember. Give it a try!\n            </Typography>\n        </Paper>\n    );\n};\n\nexport default UrlEntry;\n","import React from 'react';\nimport {Typography, Box, Grid, TextField, Button, Paper, CircularProgress} from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport {Alert} from '@material-ui/lab';\nimport {IUrl} from '../types';\n\ntype DetailsSectionProps = {\n    data: IUrl;\n    errorMessage: string;\n    loading: boolean;\n};\n\nconst useDetailsSectionStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n        width: '60%',\n        height: '90%',\n    },\n    subtitle: {\n        fontWeight: 500,\n        justifyContent: 'start'\n    },\n    subTitleContainer: {\n        width: '60%',\n        marginLeft: theme.spacing(-5)\n    },\n    shortenedUrl: {\n        border: '3px solid #bbb',\n        width: '100%'\n    },\n    copyUrl: {\n        width: '100%',\n        height: '100%'\n    },\n    errorMessage: {\n        width: '60%'\n    }\n}));\n\nconst DetailsSection: React.FC<DetailsSectionProps> = ({ loading, data, errorMessage }) => {\n    const classes = useDetailsSectionStyles();\n\n    return (\n        <>\n            {\n                loading &&\n                    <CircularProgress />\n            }\n            {\n                !loading && data &&\n                    <>\n                        <Grid\n                            className={classes.subTitleContainer}\n                            container\n                            item\n                            justifyContent='flex-start'\n                        >\n                            <Typography\n                                className={classes.subtitle}\n                                variant='h5'\n                            >\n                          Here is your shortened URL!\n                            </Typography>\n                        </Grid>\n                        <Paper\n                            className={classes.root}\n                            elevation={2}\n                        >\n                            <Grid\n                                alignItems='center'\n                                container\n                                direction=\"row\"\n                                item\n                                justifyContent=\"center\"\n                            >\n                                <Grid\n                                    item\n                                    xs={8}\n                                >\n                                    <TextField\n                                        className={classes.shortenedUrl}\n                                        disabled\n                                        InputProps={{ disableUnderline: true }}\n                                        value={data.shortUrl}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={4}\n                                >\n                                    <Button\n                                        className={classes.copyUrl}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                    >\n                              Copy URL\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <Box mt={2} />\n\n                        </Paper>\n                    </>\n            }\n            {\n                !loading && errorMessage &&\n                    <Alert\n                        className={classes.errorMessage}\n                        severity=\"error\"\n                    >\n                        {errorMessage}\n                    </Alert>\n            }\n        </>\n    );\n};\n\nexport default DetailsSection;\n","export const ENDPOINTS = {\n    shortenUrl: '/api/v1/shortenUrl'\n};\n","import axios from 'axios';\nimport {ENDPOINTS} from './enpoints';\nimport {ShortenUrlResponse} from '../types';\n\ntype UrlApi = {\n    shortenUrl: (params: { url: string }) => Promise<ShortenUrlResponse>\n};\n\nconst url: UrlApi = {\n    shortenUrl: (params) => axios.post(ENDPOINTS.shortenUrl, params)\n};\n\nexport const API = {\n    url\n};\n","import {useState, useEffect, useCallback} from 'react';\nimport {BaseError, GenericResponse} from '../types';\n\ntype useResourceResult<T> = {\n    loading: boolean,\n    data: T,\n    error: BaseError,\n    fetch: () => Promise<void>\n};\n\n// typical useQuery functionality recreated\nconst useResource = <T>(\n    apiMethod: (data: any) => Promise<unknown>,\n    onLoadFetchEnabled = true,\n    payload: Record<string, any> = {}\n): useResourceResult<T> => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [data, setData] = useState<T>(null as unknown as T);\n    const [error, setError] = useState<BaseError>(null as unknown as BaseError);\n\n    const fetch = useCallback(async (): Promise<void> => {\n        try {\n            setLoading(true);\n            const response = await apiMethod(payload) as GenericResponse<T>;\n            setLoading(false);\n            setData(response.data.data);\n        } catch (e) {\n            setLoading(false);\n            setError((e as any).response.data.error);\n        }\n    }, [setLoading, apiMethod, setData, setError, payload]);\n\n    useEffect(() => {\n        onLoadFetchEnabled && fetch();\n    }, [onLoadFetchEnabled]);\n\n    return {\n        loading,\n        data,\n        error,\n        fetch\n    };\n};\n\nexport default useResource;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Typography, Grid, Box} from '@material-ui/core';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport UrlEntry from './UrlEntry';\nimport DetailsSection from './DetailsSection';\nimport {API} from '../api';\nimport useResource from '../hooks/useResource';\nimport {IUrl} from '../types';\n\nconst useHomeStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    logo: {\n        color: theme.palette.primary.main,\n        fontWeight: 500,\n        textShadow: '2px 2px #000000',\n        fontStyle: 'italic'\n    }\n}));\n\nconst App: React.FC = () => {\n    const classes = useHomeStyles();\n    const [url, setUrl] = useState<string>('');\n    const [shortenUrlClick, setShortenUrlClick] = useState<boolean>(false);\n    const { loading, data, error, fetch } = useResource<IUrl>(API.url.shortenUrl, false, { url });\n\n    useEffect( (): void => {\n        shortenUrlClick && fetch();\n        setShortenUrlClick(false);\n    }, [shortenUrlClick, fetch]);\n\n    const handleUrlChange = useCallback((value: string): void => {\n        setUrl(value);\n    }, []);\n\n    const handleShortenUrlClick = useCallback((): void => {\n        setShortenUrlClick(true);\n    }, []);\n\n\n    console.log(error);\n\n    return (\n        <Grid\n            className={classes.root}\n            container\n            direction='column'\n            spacing={3}\n        >\n            <Typography\n                className={classes.logo}\n                variant='h1'\n            >\n                URL Shortener\n            </Typography>\n            <UrlEntry\n                detailsLoading={loading}\n                handleChange={handleUrlChange}\n                handleClick={handleShortenUrlClick}\n                value={url}\n            />\n            <Box mt={2} />\n            <DetailsSection\n                data={data}\n                errorMessage={error?.message}\n                loading={loading}\n            />\n        </Grid>\n    );\n};\n\nexport default App;\n"],"names":["useUrlEntryStyles","makeStyles","createStyles","root","display","flexDirection","alignItems","justifyContent","padding","margin","width","height","subtitle","fontWeight","entry","border","entryInvalid","submission","helperText","color","detailsLoading","value","handleChange","handleClick","classes","isUrlValid","useMemo","test","Paper","className","elevation","Typography","variant","Grid","container","item","spacing","xs","TextField","focused","onChange","e","target","InputProps","disableUnderline","Button","disabled","onClick","FormHelperText","Box","mt","useDetailsSectionStyles","theme","subTitleContainer","marginLeft","shortenedUrl","copyUrl","errorMessage","loading","data","CircularProgress","direction","shortUrl","Alert","severity","ENDPOINTS","API","shortenUrl","params","axios","apiMethod","onLoadFetchEnabled","payload","setLoading","useState","setData","error","setError","fetch","useCallback","async","response","useEffect","useHomeStyles","logo","palette","primary","main","textShadow","fontStyle","url","setUrl","shortenUrlClick","setShortenUrlClick","useResource","handleUrlChange","handleShortenUrlClick","console","log","message"],"sourceRoot":""}